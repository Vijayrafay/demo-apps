affinity: {}
autoscaling:
  enabled: false
cloneStaticSiteFromGit:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/git
    tag: 2.32.0-debian-10-r51
  interval: 60
clusterDomain: cluster.local
commonAnnotations:
  rafay.dev/registry-rx28oml: rauto-automation-ecr-registry
commonLabels: {}
containerPorts:
  http: 8080
containerSecurityContext:
  enabled: false
  fsGroup: 1001
customLivenessProbe: {}
customReadinessProbe: {}
extraDeploy: []
extraEnvVars: []
extraVolumeMounts: []
extraVolumes: []
healthIngress:
  annotations: {}
  certManager: false
  enabled: false
  extraHosts: []
  extraTls: []
  hostname: example.local
  secrets: []
  tls: false
image:
  debug: false
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/nginx
  tag: 1.21.1-debian-10-r25
ingress:
  certManager: false
  enabled: true
  extraHosts: []
  extraTls: []
  hostname: automation-4515.qasimplified.com
  secrets: []
  tls: true
ldapDaemon:
  customLivenessProbe: {}
  customReadinessProbe: {}
  enabled: false
  existingNginxServerBlockSecret: null
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/nginx-ldap-auth-daemon
    tag: 0.20200116.0-debian-10-r412
  ldapConfig:
    baseDN: ''
    bindDN: ''
    bindPassword: ''
    filter: ''
    httpCookieName: ''
    httpRealm: ''
    uri: ''
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nginxServerBlock: "server {\nlisten 0.0.0.0:{{ .Values.containerPorts.http }};\n\
    \n# You can provide a special subPath or the root\nlocation = / {\n    auth_request\
    \ /auth-proxy;\n}\n\nlocation = /auth-proxy {\n    internal;\n\n    proxy_pass\
    \ http://127.0.0.1:{{ .Values.ldapDaemon.port }};\n\n    ###############################################################\n\
    \    # YOU SHOULD CHANGE THE FOLLOWING TO YOUR LDAP CONFIGURATION  #\n    ###############################################################\n\
    \n    # URL and port for connecting to the LDAP server\n    proxy_set_header X-Ldap-URL\
    \ \"ldap://YOUR_LDAP_SERVER_IP:YOUR_LDAP_SERVER_PORT\";\n\n    # Base DN\n   \
    \ proxy_set_header X-Ldap-BaseDN \"dc=example,dc=org\";\n\n    # Bind DN\n   \
    \ proxy_set_header X-Ldap-BindDN \"cn=admin,dc=example,dc=org\";\n\n    # Bind\
    \ password\n    proxy_set_header X-Ldap-BindPass \"adminpassword\";\n}\n}"
  port: 8888
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/nginx-exporter
    tag: 0.9.0-debian-10-r119
  podAnnotations: {}
  resources:
    limits: {}
    requests: {}
  service:
    annotations:
      prometheus.io/port: '{{ .Values.metrics.service.port }}'
      prometheus.io/scrape: 'true'
    port: 9113
  serviceMonitor:
    enabled: false
nodeAffinityPreset:
  key: ''
  type: ''
  values: []
nodeSelector: {}
podAffinityPreset: ''
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
podSecurityContext:
  enabled: false
  runAsNonRoot: true
  runAsUser: 1001
  sysctls: {}
readinessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 3
replicaCount: 1
resources:
  limits: {}
  requests: {}
service:
  annotations: {}
  externalTrafficPolicy: Cluster
  httpsPort: 443
  nodePorts:
    http: ''
    https: ''
  port: 80
  targetPort:
    http: http
    https: https
  type: NodePort
tolerations: {}
